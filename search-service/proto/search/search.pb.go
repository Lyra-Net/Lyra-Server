// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/search.proto

package search

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ========================
// ENUM & COMMON STRUCTS
// ========================
type IndexType int32

const (
	IndexType_INDEX_TYPE_UNSPECIFIED IndexType = 0
	IndexType_SONG                   IndexType = 1
	IndexType_ARTIST                 IndexType = 2
	IndexType_PLAYLIST               IndexType = 3
)

// Enum value maps for IndexType.
var (
	IndexType_name = map[int32]string{
		0: "INDEX_TYPE_UNSPECIFIED",
		1: "SONG",
		2: "ARTIST",
		3: "PLAYLIST",
	}
	IndexType_value = map[string]int32{
		"INDEX_TYPE_UNSPECIFIED": 0,
		"SONG":                   1,
		"ARTIST":                 2,
		"PLAYLIST":               3,
	}
)

func (x IndexType) Enum() *IndexType {
	p := new(IndexType)
	*p = x
	return p
}

func (x IndexType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndexType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_search_proto_enumTypes[0].Descriptor()
}

func (IndexType) Type() protoreflect.EnumType {
	return &file_proto_search_proto_enumTypes[0]
}

func (x IndexType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndexType.Descriptor instead.
func (IndexType) EnumDescriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{0}
}

// Common field for owner (optional)
type Owner struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Owner) Reset() {
	*x = Owner{}
	mi := &file_proto_search_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{0}
}

func (x *Owner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Owner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ========================
// ENTITY SCHEMAS
// ========================
type SongDocument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artists       []string               `protobuf:"bytes,3,rep,name=artists,proto3" json:"artists,omitempty"`
	DurationSec   uint32                 `protobuf:"varint,4,opt,name=duration_sec,json=durationSec,proto3" json:"duration_sec,omitempty"`
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SongDocument) Reset() {
	*x = SongDocument{}
	mi := &file_proto_search_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SongDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongDocument) ProtoMessage() {}

func (x *SongDocument) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongDocument.ProtoReflect.Descriptor instead.
func (*SongDocument) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{1}
}

func (x *SongDocument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SongDocument) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SongDocument) GetArtists() []string {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *SongDocument) GetDurationSec() uint32 {
	if x != nil {
		return x.DurationSec
	}
	return 0
}

func (x *SongDocument) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ArtistDocument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtistDocument) Reset() {
	*x = ArtistDocument{}
	mi := &file_proto_search_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistDocument) ProtoMessage() {}

func (x *ArtistDocument) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistDocument.ProtoReflect.Descriptor instead.
func (*ArtistDocument) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{2}
}

func (x *ArtistDocument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArtistDocument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PlaylistDocument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Owner         *Owner                 `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	SongTitles    []string               `protobuf:"bytes,5,rep,name=song_titles,json=songTitles,proto3" json:"song_titles,omitempty"`
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	IsPublic      bool                   `protobuf:"varint,7,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaylistDocument) Reset() {
	*x = PlaylistDocument{}
	mi := &file_proto_search_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaylistDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistDocument) ProtoMessage() {}

func (x *PlaylistDocument) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistDocument.ProtoReflect.Descriptor instead.
func (*PlaylistDocument) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{3}
}

func (x *PlaylistDocument) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlaylistDocument) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlaylistDocument) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlaylistDocument) GetOwner() *Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *PlaylistDocument) GetSongTitles() []string {
	if x != nil {
		return x.SongTitles
	}
	return nil
}

func (x *PlaylistDocument) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PlaylistDocument) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

// ========================
// INDEX MANAGEMENT API
// ========================
type IndexRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  IndexType              `protobuf:"varint,1,opt,name=type,proto3,enum=search.IndexType" json:"type,omitempty"`
	// Types that are valid to be assigned to Document:
	//
	//	*IndexRequest_Song
	//	*IndexRequest_Artist
	//	*IndexRequest_Playlist
	Document      isIndexRequest_Document `protobuf_oneof:"document"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexRequest) Reset() {
	*x = IndexRequest{}
	mi := &file_proto_search_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRequest) ProtoMessage() {}

func (x *IndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRequest.ProtoReflect.Descriptor instead.
func (*IndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{4}
}

func (x *IndexRequest) GetType() IndexType {
	if x != nil {
		return x.Type
	}
	return IndexType_INDEX_TYPE_UNSPECIFIED
}

func (x *IndexRequest) GetDocument() isIndexRequest_Document {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *IndexRequest) GetSong() *SongDocument {
	if x != nil {
		if x, ok := x.Document.(*IndexRequest_Song); ok {
			return x.Song
		}
	}
	return nil
}

func (x *IndexRequest) GetArtist() *ArtistDocument {
	if x != nil {
		if x, ok := x.Document.(*IndexRequest_Artist); ok {
			return x.Artist
		}
	}
	return nil
}

func (x *IndexRequest) GetPlaylist() *PlaylistDocument {
	if x != nil {
		if x, ok := x.Document.(*IndexRequest_Playlist); ok {
			return x.Playlist
		}
	}
	return nil
}

type isIndexRequest_Document interface {
	isIndexRequest_Document()
}

type IndexRequest_Song struct {
	Song *SongDocument `protobuf:"bytes,2,opt,name=song,proto3,oneof"`
}

type IndexRequest_Artist struct {
	Artist *ArtistDocument `protobuf:"bytes,3,opt,name=artist,proto3,oneof"`
}

type IndexRequest_Playlist struct {
	Playlist *PlaylistDocument `protobuf:"bytes,4,opt,name=playlist,proto3,oneof"`
}

func (*IndexRequest_Song) isIndexRequest_Document() {}

func (*IndexRequest_Artist) isIndexRequest_Document() {}

func (*IndexRequest_Playlist) isIndexRequest_Document() {}

type IndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexResponse) Reset() {
	*x = IndexResponse{}
	mi := &file_proto_search_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexResponse) ProtoMessage() {}

func (x *IndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexResponse.ProtoReflect.Descriptor instead.
func (*IndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{5}
}

func (x *IndexResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *IndexResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          IndexType              `protobuf:"varint,1,opt,name=type,proto3,enum=search.IndexType" json:"type,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIndexRequest) Reset() {
	*x = DeleteIndexRequest{}
	mi := &file_proto_search_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIndexRequest) ProtoMessage() {}

func (x *DeleteIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIndexRequest.ProtoReflect.Descriptor instead.
func (*DeleteIndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteIndexRequest) GetType() IndexType {
	if x != nil {
		return x.Type
	}
	return IndexType_INDEX_TYPE_UNSPECIFIED
}

func (x *DeleteIndexRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteIndexResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIndexResponse) Reset() {
	*x = DeleteIndexResponse{}
	mi := &file_proto_search_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIndexResponse) ProtoMessage() {}

func (x *DeleteIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIndexResponse.ProtoReflect.Descriptor instead.
func (*DeleteIndexResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteIndexResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ========================
// SEARCH API
// ========================
type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Type          IndexType              `protobuf:"varint,2,opt,name=type,proto3,enum=search.IndexType" json:"type,omitempty"`
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        uint32                 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_proto_search_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{8}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetType() IndexType {
	if x != nil {
		return x.Type
	}
	return IndexType_INDEX_TYPE_UNSPECIFIED
}

func (x *SearchRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SearchResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Type  IndexType              `protobuf:"varint,1,opt,name=type,proto3,enum=search.IndexType" json:"type,omitempty"`
	// Types that are valid to be assigned to Document:
	//
	//	*SearchResult_Song
	//	*SearchResult_Artist
	//	*SearchResult_Playlist
	Document      isSearchResult_Document `protobuf_oneof:"document"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_proto_search_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{9}
}

func (x *SearchResult) GetType() IndexType {
	if x != nil {
		return x.Type
	}
	return IndexType_INDEX_TYPE_UNSPECIFIED
}

func (x *SearchResult) GetDocument() isSearchResult_Document {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *SearchResult) GetSong() *SongDocument {
	if x != nil {
		if x, ok := x.Document.(*SearchResult_Song); ok {
			return x.Song
		}
	}
	return nil
}

func (x *SearchResult) GetArtist() *ArtistDocument {
	if x != nil {
		if x, ok := x.Document.(*SearchResult_Artist); ok {
			return x.Artist
		}
	}
	return nil
}

func (x *SearchResult) GetPlaylist() *PlaylistDocument {
	if x != nil {
		if x, ok := x.Document.(*SearchResult_Playlist); ok {
			return x.Playlist
		}
	}
	return nil
}

type isSearchResult_Document interface {
	isSearchResult_Document()
}

type SearchResult_Song struct {
	Song *SongDocument `protobuf:"bytes,2,opt,name=song,proto3,oneof"`
}

type SearchResult_Artist struct {
	Artist *ArtistDocument `protobuf:"bytes,3,opt,name=artist,proto3,oneof"`
}

type SearchResult_Playlist struct {
	Playlist *PlaylistDocument `protobuf:"bytes,4,opt,name=playlist,proto3,oneof"`
}

func (*SearchResult_Song) isSearchResult_Document() {}

func (*SearchResult_Artist) isSearchResult_Document() {}

func (*SearchResult_Playlist) isSearchResult_Document() {}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SearchResult        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_proto_search_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_search_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_proto_search_proto_rawDescGZIP(), []int{10}
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_proto_search_proto protoreflect.FileDescriptor

const file_proto_search_proto_rawDesc = "" +
	"\n" +
	"\x12proto/search.proto\x12\x06search\"+\n" +
	"\x05Owner\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\x85\x01\n" +
	"\fSongDocument\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\aartists\x18\x03 \x03(\tR\aartists\x12!\n" +
	"\fduration_sec\x18\x04 \x01(\rR\vdurationSec\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\"4\n" +
	"\x0eArtistDocument\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xcf\x01\n" +
	"\x10PlaylistDocument\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12#\n" +
	"\x05owner\x18\x04 \x01(\v2\r.search.OwnerR\x05owner\x12\x1f\n" +
	"\vsong_titles\x18\x05 \x03(\tR\n" +
	"songTitles\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x1b\n" +
	"\tis_public\x18\a \x01(\bR\bisPublic\"\xd7\x01\n" +
	"\fIndexRequest\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.search.IndexTypeR\x04type\x12*\n" +
	"\x04song\x18\x02 \x01(\v2\x14.search.SongDocumentH\x00R\x04song\x120\n" +
	"\x06artist\x18\x03 \x01(\v2\x16.search.ArtistDocumentH\x00R\x06artist\x126\n" +
	"\bplaylist\x18\x04 \x01(\v2\x18.search.PlaylistDocumentH\x00R\bplaylistB\n" +
	"\n" +
	"\bdocument\"C\n" +
	"\rIndexResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"K\n" +
	"\x12DeleteIndexRequest\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.search.IndexTypeR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"/\n" +
	"\x13DeleteIndexResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"z\n" +
	"\rSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12%\n" +
	"\x04type\x18\x02 \x01(\x0e2\x11.search.IndexTypeR\x04type\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\rR\x06offset\"\xd7\x01\n" +
	"\fSearchResult\x12%\n" +
	"\x04type\x18\x01 \x01(\x0e2\x11.search.IndexTypeR\x04type\x12*\n" +
	"\x04song\x18\x02 \x01(\v2\x14.search.SongDocumentH\x00R\x04song\x120\n" +
	"\x06artist\x18\x03 \x01(\v2\x16.search.ArtistDocumentH\x00R\x06artist\x126\n" +
	"\bplaylist\x18\x04 \x01(\v2\x18.search.PlaylistDocumentH\x00R\bplaylistB\n" +
	"\n" +
	"\bdocument\"@\n" +
	"\x0eSearchResponse\x12.\n" +
	"\aresults\x18\x01 \x03(\v2\x14.search.SearchResultR\aresults*K\n" +
	"\tIndexType\x12\x1a\n" +
	"\x16INDEX_TYPE_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04SONG\x10\x01\x12\n" +
	"\n" +
	"\x06ARTIST\x10\x02\x12\f\n" +
	"\bPLAYLIST\x10\x032\xd1\x01\n" +
	"\rSearchService\x12<\n" +
	"\rIndexDocument\x12\x14.search.IndexRequest\x1a\x15.search.IndexResponse\x12I\n" +
	"\x0eDeleteDocument\x12\x1a.search.DeleteIndexRequest\x1a\x1b.search.DeleteIndexResponse\x127\n" +
	"\x06Search\x12\x15.search.SearchRequest\x1a\x16.search.SearchResponseB\x15Z\x13proto/search;searchb\x06proto3"

var (
	file_proto_search_proto_rawDescOnce sync.Once
	file_proto_search_proto_rawDescData []byte
)

func file_proto_search_proto_rawDescGZIP() []byte {
	file_proto_search_proto_rawDescOnce.Do(func() {
		file_proto_search_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_search_proto_rawDesc), len(file_proto_search_proto_rawDesc)))
	})
	return file_proto_search_proto_rawDescData
}

var file_proto_search_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_search_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_search_proto_goTypes = []any{
	(IndexType)(0),              // 0: search.IndexType
	(*Owner)(nil),               // 1: search.Owner
	(*SongDocument)(nil),        // 2: search.SongDocument
	(*ArtistDocument)(nil),      // 3: search.ArtistDocument
	(*PlaylistDocument)(nil),    // 4: search.PlaylistDocument
	(*IndexRequest)(nil),        // 5: search.IndexRequest
	(*IndexResponse)(nil),       // 6: search.IndexResponse
	(*DeleteIndexRequest)(nil),  // 7: search.DeleteIndexRequest
	(*DeleteIndexResponse)(nil), // 8: search.DeleteIndexResponse
	(*SearchRequest)(nil),       // 9: search.SearchRequest
	(*SearchResult)(nil),        // 10: search.SearchResult
	(*SearchResponse)(nil),      // 11: search.SearchResponse
}
var file_proto_search_proto_depIdxs = []int32{
	1,  // 0: search.PlaylistDocument.owner:type_name -> search.Owner
	0,  // 1: search.IndexRequest.type:type_name -> search.IndexType
	2,  // 2: search.IndexRequest.song:type_name -> search.SongDocument
	3,  // 3: search.IndexRequest.artist:type_name -> search.ArtistDocument
	4,  // 4: search.IndexRequest.playlist:type_name -> search.PlaylistDocument
	0,  // 5: search.DeleteIndexRequest.type:type_name -> search.IndexType
	0,  // 6: search.SearchRequest.type:type_name -> search.IndexType
	0,  // 7: search.SearchResult.type:type_name -> search.IndexType
	2,  // 8: search.SearchResult.song:type_name -> search.SongDocument
	3,  // 9: search.SearchResult.artist:type_name -> search.ArtistDocument
	4,  // 10: search.SearchResult.playlist:type_name -> search.PlaylistDocument
	10, // 11: search.SearchResponse.results:type_name -> search.SearchResult
	5,  // 12: search.SearchService.IndexDocument:input_type -> search.IndexRequest
	7,  // 13: search.SearchService.DeleteDocument:input_type -> search.DeleteIndexRequest
	9,  // 14: search.SearchService.Search:input_type -> search.SearchRequest
	6,  // 15: search.SearchService.IndexDocument:output_type -> search.IndexResponse
	8,  // 16: search.SearchService.DeleteDocument:output_type -> search.DeleteIndexResponse
	11, // 17: search.SearchService.Search:output_type -> search.SearchResponse
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_search_proto_init() }
func file_proto_search_proto_init() {
	if File_proto_search_proto != nil {
		return
	}
	file_proto_search_proto_msgTypes[4].OneofWrappers = []any{
		(*IndexRequest_Song)(nil),
		(*IndexRequest_Artist)(nil),
		(*IndexRequest_Playlist)(nil),
	}
	file_proto_search_proto_msgTypes[9].OneofWrappers = []any{
		(*SearchResult_Song)(nil),
		(*SearchResult_Artist)(nil),
		(*SearchResult_Playlist)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_search_proto_rawDesc), len(file_proto_search_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_search_proto_goTypes,
		DependencyIndexes: file_proto_search_proto_depIdxs,
		EnumInfos:         file_proto_search_proto_enumTypes,
		MessageInfos:      file_proto_search_proto_msgTypes,
	}.Build()
	File_proto_search_proto = out.File
	file_proto_search_proto_goTypes = nil
	file_proto_search_proto_depIdxs = nil
}
