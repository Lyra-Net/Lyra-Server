// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: playlist.proto

package playlist

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Artist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artist) Reset() {
	*x = Artist{}
	mi := &file_playlist_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artist) ProtoMessage() {}

func (x *Artist) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artist.ProtoReflect.Descriptor instead.
func (*Artist) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{0}
}

func (x *Artist) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Artist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PlaylistSong struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SongId        string                 `protobuf:"bytes,1,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artists       []*Artist              `protobuf:"bytes,3,rep,name=artists,proto3" json:"artists,omitempty"`
	Position      int32                  `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaylistSong) Reset() {
	*x = PlaylistSong{}
	mi := &file_playlist_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaylistSong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaylistSong) ProtoMessage() {}

func (x *PlaylistSong) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaylistSong.ProtoReflect.Descriptor instead.
func (*PlaylistSong) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{1}
}

func (x *PlaylistSong) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

func (x *PlaylistSong) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlaylistSong) GetArtists() []*Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

func (x *PlaylistSong) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type Playlist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId    string                 `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	PlaylistName  string                 `protobuf:"bytes,2,opt,name=playlist_name,json=playlistName,proto3" json:"playlist_name,omitempty"`
	OwnerId       string                 `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	IsPublic      bool                   `protobuf:"varint,4,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	Songs         []*PlaylistSong        `protobuf:"bytes,5,rep,name=songs,proto3" json:"songs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Playlist) Reset() {
	*x = Playlist{}
	mi := &file_playlist_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Playlist) ProtoMessage() {}

func (x *Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Playlist.ProtoReflect.Descriptor instead.
func (*Playlist) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{2}
}

func (x *Playlist) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *Playlist) GetPlaylistName() string {
	if x != nil {
		return x.PlaylistName
	}
	return ""
}

func (x *Playlist) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Playlist) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *Playlist) GetSongs() []*PlaylistSong {
	if x != nil {
		return x.Songs
	}
	return nil
}

type CreatePlaylistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistName  string                 `protobuf:"bytes,1,opt,name=playlist_name,json=playlistName,proto3" json:"playlist_name,omitempty"`
	IsPublic      bool                   `protobuf:"varint,2,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePlaylistRequest) Reset() {
	*x = CreatePlaylistRequest{}
	mi := &file_playlist_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistRequest) ProtoMessage() {}

func (x *CreatePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistRequest.ProtoReflect.Descriptor instead.
func (*CreatePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePlaylistRequest) GetPlaylistName() string {
	if x != nil {
		return x.PlaylistName
	}
	return ""
}

func (x *CreatePlaylistRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type CreatePlaylistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId    string                 `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	IsSuccess     bool                   `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePlaylistResponse) Reset() {
	*x = CreatePlaylistResponse{}
	mi := &file_playlist_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaylistResponse) ProtoMessage() {}

func (x *CreatePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaylistResponse.ProtoReflect.Descriptor instead.
func (*CreatePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePlaylistResponse) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *CreatePlaylistResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type AddSongToPlaylistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId    string                 `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	SongId        string                 `protobuf:"bytes,2,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSongToPlaylistRequest) Reset() {
	*x = AddSongToPlaylistRequest{}
	mi := &file_playlist_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSongToPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongToPlaylistRequest) ProtoMessage() {}

func (x *AddSongToPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongToPlaylistRequest.ProtoReflect.Descriptor instead.
func (*AddSongToPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{5}
}

func (x *AddSongToPlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *AddSongToPlaylistRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type AddSongToPlaylistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSongToPlaylistResponse) Reset() {
	*x = AddSongToPlaylistResponse{}
	mi := &file_playlist_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSongToPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSongToPlaylistResponse) ProtoMessage() {}

func (x *AddSongToPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSongToPlaylistResponse.ProtoReflect.Descriptor instead.
func (*AddSongToPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{6}
}

func (x *AddSongToPlaylistResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type RemoveSongFromPlaylistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId    string                 `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	SongId        string                 `protobuf:"bytes,2,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSongFromPlaylistRequest) Reset() {
	*x = RemoveSongFromPlaylistRequest{}
	mi := &file_playlist_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSongFromPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSongFromPlaylistRequest) ProtoMessage() {}

func (x *RemoveSongFromPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSongFromPlaylistRequest.ProtoReflect.Descriptor instead.
func (*RemoveSongFromPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveSongFromPlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *RemoveSongFromPlaylistRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

type RemoveSongFromPlaylistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSongFromPlaylistResponse) Reset() {
	*x = RemoveSongFromPlaylistResponse{}
	mi := &file_playlist_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSongFromPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSongFromPlaylistResponse) ProtoMessage() {}

func (x *RemoveSongFromPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSongFromPlaylistResponse.ProtoReflect.Descriptor instead.
func (*RemoveSongFromPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveSongFromPlaylistResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type MoveSongInPlaylistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId    string                 `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	SongId        string                 `protobuf:"bytes,2,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	NewPosition   int32                  `protobuf:"varint,3,opt,name=new_position,json=newPosition,proto3" json:"new_position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveSongInPlaylistRequest) Reset() {
	*x = MoveSongInPlaylistRequest{}
	mi := &file_playlist_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveSongInPlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveSongInPlaylistRequest) ProtoMessage() {}

func (x *MoveSongInPlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveSongInPlaylistRequest.ProtoReflect.Descriptor instead.
func (*MoveSongInPlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{9}
}

func (x *MoveSongInPlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *MoveSongInPlaylistRequest) GetSongId() string {
	if x != nil {
		return x.SongId
	}
	return ""
}

func (x *MoveSongInPlaylistRequest) GetNewPosition() int32 {
	if x != nil {
		return x.NewPosition
	}
	return 0
}

type MoveSongInPlaylistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveSongInPlaylistResponse) Reset() {
	*x = MoveSongInPlaylistResponse{}
	mi := &file_playlist_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveSongInPlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveSongInPlaylistResponse) ProtoMessage() {}

func (x *MoveSongInPlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveSongInPlaylistResponse.ProtoReflect.Descriptor instead.
func (*MoveSongInPlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{10}
}

func (x *MoveSongInPlaylistResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type GetPlaylistByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId    string                 `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaylistByIDRequest) Reset() {
	*x = GetPlaylistByIDRequest{}
	mi := &file_playlist_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaylistByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaylistByIDRequest) ProtoMessage() {}

func (x *GetPlaylistByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaylistByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPlaylistByIDRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlaylistByIDRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type ListMyPlaylistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMyPlaylistsRequest) Reset() {
	*x = ListMyPlaylistsRequest{}
	mi := &file_playlist_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMyPlaylistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyPlaylistsRequest) ProtoMessage() {}

func (x *ListMyPlaylistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyPlaylistsRequest.ProtoReflect.Descriptor instead.
func (*ListMyPlaylistsRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{12}
}

type ListMyPlaylistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playlists     []*Playlist            `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMyPlaylistsResponse) Reset() {
	*x = ListMyPlaylistsResponse{}
	mi := &file_playlist_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMyPlaylistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMyPlaylistsResponse) ProtoMessage() {}

func (x *ListMyPlaylistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMyPlaylistsResponse.ProtoReflect.Descriptor instead.
func (*ListMyPlaylistsResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{13}
}

func (x *ListMyPlaylistsResponse) GetPlaylists() []*Playlist {
	if x != nil {
		return x.Playlists
	}
	return nil
}

type UpdatePlaylistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId    string                 `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	PlaylistName  string                 `protobuf:"bytes,2,opt,name=playlist_name,json=playlistName,proto3" json:"playlist_name,omitempty"`
	IsPublic      bool                   `protobuf:"varint,3,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePlaylistRequest) Reset() {
	*x = UpdatePlaylistRequest{}
	mi := &file_playlist_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaylistRequest) ProtoMessage() {}

func (x *UpdatePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaylistRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

func (x *UpdatePlaylistRequest) GetPlaylistName() string {
	if x != nil {
		return x.PlaylistName
	}
	return ""
}

func (x *UpdatePlaylistRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

type UpdatePlaylistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playlist      *Playlist              `protobuf:"bytes,1,opt,name=playlist,proto3" json:"playlist,omitempty"`
	IsSuccess     bool                   `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePlaylistResponse) Reset() {
	*x = UpdatePlaylistResponse{}
	mi := &file_playlist_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaylistResponse) ProtoMessage() {}

func (x *UpdatePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaylistResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{15}
}

func (x *UpdatePlaylistResponse) GetPlaylist() *Playlist {
	if x != nil {
		return x.Playlist
	}
	return nil
}

func (x *UpdatePlaylistResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type DeletePlaylistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaylistId    string                 `protobuf:"bytes,1,opt,name=playlist_id,json=playlistId,proto3" json:"playlist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePlaylistRequest) Reset() {
	*x = DeletePlaylistRequest{}
	mi := &file_playlist_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePlaylistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistRequest) ProtoMessage() {}

func (x *DeletePlaylistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistRequest.ProtoReflect.Descriptor instead.
func (*DeletePlaylistRequest) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{16}
}

func (x *DeletePlaylistRequest) GetPlaylistId() string {
	if x != nil {
		return x.PlaylistId
	}
	return ""
}

type DeletePlaylistResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePlaylistResponse) Reset() {
	*x = DeletePlaylistResponse{}
	mi := &file_playlist_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePlaylistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaylistResponse) ProtoMessage() {}

func (x *DeletePlaylistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playlist_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaylistResponse.ProtoReflect.Descriptor instead.
func (*DeletePlaylistResponse) Descriptor() ([]byte, []int) {
	return file_playlist_proto_rawDescGZIP(), []int{17}
}

func (x *DeletePlaylistResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

var File_playlist_proto protoreflect.FileDescriptor

const file_playlist_proto_rawDesc = "" +
	"\n" +
	"\x0eplaylist.proto\x12\bplaylist\",\n" +
	"\x06Artist\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\x85\x01\n" +
	"\fPlaylistSong\x12\x17\n" +
	"\asong_id\x18\x01 \x01(\tR\x06songId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12*\n" +
	"\aartists\x18\x03 \x03(\v2\x10.playlist.ArtistR\aartists\x12\x1a\n" +
	"\bposition\x18\x04 \x01(\x05R\bposition\"\xb6\x01\n" +
	"\bPlaylist\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\x12#\n" +
	"\rplaylist_name\x18\x02 \x01(\tR\fplaylistName\x12\x19\n" +
	"\bowner_id\x18\x03 \x01(\tR\aownerId\x12\x1b\n" +
	"\tis_public\x18\x04 \x01(\bR\bisPublic\x12,\n" +
	"\x05songs\x18\x05 \x03(\v2\x16.playlist.PlaylistSongR\x05songs\"Y\n" +
	"\x15CreatePlaylistRequest\x12#\n" +
	"\rplaylist_name\x18\x01 \x01(\tR\fplaylistName\x12\x1b\n" +
	"\tis_public\x18\x02 \x01(\bR\bisPublic\"X\n" +
	"\x16CreatePlaylistResponse\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\x12\x1d\n" +
	"\n" +
	"is_success\x18\x02 \x01(\bR\tisSuccess\"T\n" +
	"\x18AddSongToPlaylistRequest\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\x12\x17\n" +
	"\asong_id\x18\x02 \x01(\tR\x06songId\":\n" +
	"\x19AddSongToPlaylistResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"Y\n" +
	"\x1dRemoveSongFromPlaylistRequest\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\x12\x17\n" +
	"\asong_id\x18\x02 \x01(\tR\x06songId\"?\n" +
	"\x1eRemoveSongFromPlaylistResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"x\n" +
	"\x19MoveSongInPlaylistRequest\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\x12\x17\n" +
	"\asong_id\x18\x02 \x01(\tR\x06songId\x12!\n" +
	"\fnew_position\x18\x03 \x01(\x05R\vnewPosition\";\n" +
	"\x1aMoveSongInPlaylistResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess\"9\n" +
	"\x16GetPlaylistByIDRequest\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\"\x18\n" +
	"\x16ListMyPlaylistsRequest\"K\n" +
	"\x17ListMyPlaylistsResponse\x120\n" +
	"\tplaylists\x18\x01 \x03(\v2\x12.playlist.PlaylistR\tplaylists\"z\n" +
	"\x15UpdatePlaylistRequest\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\x12#\n" +
	"\rplaylist_name\x18\x02 \x01(\tR\fplaylistName\x12\x1b\n" +
	"\tis_public\x18\x03 \x01(\bR\bisPublic\"g\n" +
	"\x16UpdatePlaylistResponse\x12.\n" +
	"\bplaylist\x18\x01 \x01(\v2\x12.playlist.PlaylistR\bplaylist\x12\x1d\n" +
	"\n" +
	"is_success\x18\x02 \x01(\bR\tisSuccess\"8\n" +
	"\x15DeletePlaylistRequest\x12\x1f\n" +
	"\vplaylist_id\x18\x01 \x01(\tR\n" +
	"playlistId\"7\n" +
	"\x16DeletePlaylistResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x01 \x01(\bR\tisSuccess2\xdd\x05\n" +
	"\x0fPlaylistService\x12S\n" +
	"\x0eCreatePlaylist\x12\x1f.playlist.CreatePlaylistRequest\x1a .playlist.CreatePlaylistResponse\x12\\\n" +
	"\x11AddSongToPlaylist\x12\".playlist.AddSongToPlaylistRequest\x1a#.playlist.AddSongToPlaylistResponse\x12k\n" +
	"\x16RemoveSongFromPlaylist\x12'.playlist.RemoveSongFromPlaylistRequest\x1a(.playlist.RemoveSongFromPlaylistResponse\x12_\n" +
	"\x12MoveSongInPlaylist\x12#.playlist.MoveSongInPlaylistRequest\x1a$.playlist.MoveSongInPlaylistResponse\x12G\n" +
	"\x0fGetPlaylistByID\x12 .playlist.GetPlaylistByIDRequest\x1a\x12.playlist.Playlist\x12V\n" +
	"\x0fListMyPlaylists\x12 .playlist.ListMyPlaylistsRequest\x1a!.playlist.ListMyPlaylistsResponse\x12S\n" +
	"\x0eUpdatePlaylist\x12\x1f.playlist.UpdatePlaylistRequest\x1a .playlist.UpdatePlaylistResponse\x12S\n" +
	"\x0eDeletePlaylist\x12\x1f.playlist.DeletePlaylistRequest\x1a .playlist.DeletePlaylistResponseBAZ?github.com/trandinh0506/BypassBeats/proto/gen/playlist;playlistb\x06proto3"

var (
	file_playlist_proto_rawDescOnce sync.Once
	file_playlist_proto_rawDescData []byte
)

func file_playlist_proto_rawDescGZIP() []byte {
	file_playlist_proto_rawDescOnce.Do(func() {
		file_playlist_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_playlist_proto_rawDesc), len(file_playlist_proto_rawDesc)))
	})
	return file_playlist_proto_rawDescData
}

var file_playlist_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_playlist_proto_goTypes = []any{
	(*Artist)(nil),                         // 0: playlist.Artist
	(*PlaylistSong)(nil),                   // 1: playlist.PlaylistSong
	(*Playlist)(nil),                       // 2: playlist.Playlist
	(*CreatePlaylistRequest)(nil),          // 3: playlist.CreatePlaylistRequest
	(*CreatePlaylistResponse)(nil),         // 4: playlist.CreatePlaylistResponse
	(*AddSongToPlaylistRequest)(nil),       // 5: playlist.AddSongToPlaylistRequest
	(*AddSongToPlaylistResponse)(nil),      // 6: playlist.AddSongToPlaylistResponse
	(*RemoveSongFromPlaylistRequest)(nil),  // 7: playlist.RemoveSongFromPlaylistRequest
	(*RemoveSongFromPlaylistResponse)(nil), // 8: playlist.RemoveSongFromPlaylistResponse
	(*MoveSongInPlaylistRequest)(nil),      // 9: playlist.MoveSongInPlaylistRequest
	(*MoveSongInPlaylistResponse)(nil),     // 10: playlist.MoveSongInPlaylistResponse
	(*GetPlaylistByIDRequest)(nil),         // 11: playlist.GetPlaylistByIDRequest
	(*ListMyPlaylistsRequest)(nil),         // 12: playlist.ListMyPlaylistsRequest
	(*ListMyPlaylistsResponse)(nil),        // 13: playlist.ListMyPlaylistsResponse
	(*UpdatePlaylistRequest)(nil),          // 14: playlist.UpdatePlaylistRequest
	(*UpdatePlaylistResponse)(nil),         // 15: playlist.UpdatePlaylistResponse
	(*DeletePlaylistRequest)(nil),          // 16: playlist.DeletePlaylistRequest
	(*DeletePlaylistResponse)(nil),         // 17: playlist.DeletePlaylistResponse
}
var file_playlist_proto_depIdxs = []int32{
	0,  // 0: playlist.PlaylistSong.artists:type_name -> playlist.Artist
	1,  // 1: playlist.Playlist.songs:type_name -> playlist.PlaylistSong
	2,  // 2: playlist.ListMyPlaylistsResponse.playlists:type_name -> playlist.Playlist
	2,  // 3: playlist.UpdatePlaylistResponse.playlist:type_name -> playlist.Playlist
	3,  // 4: playlist.PlaylistService.CreatePlaylist:input_type -> playlist.CreatePlaylistRequest
	5,  // 5: playlist.PlaylistService.AddSongToPlaylist:input_type -> playlist.AddSongToPlaylistRequest
	7,  // 6: playlist.PlaylistService.RemoveSongFromPlaylist:input_type -> playlist.RemoveSongFromPlaylistRequest
	9,  // 7: playlist.PlaylistService.MoveSongInPlaylist:input_type -> playlist.MoveSongInPlaylistRequest
	11, // 8: playlist.PlaylistService.GetPlaylistByID:input_type -> playlist.GetPlaylistByIDRequest
	12, // 9: playlist.PlaylistService.ListMyPlaylists:input_type -> playlist.ListMyPlaylistsRequest
	14, // 10: playlist.PlaylistService.UpdatePlaylist:input_type -> playlist.UpdatePlaylistRequest
	16, // 11: playlist.PlaylistService.DeletePlaylist:input_type -> playlist.DeletePlaylistRequest
	4,  // 12: playlist.PlaylistService.CreatePlaylist:output_type -> playlist.CreatePlaylistResponse
	6,  // 13: playlist.PlaylistService.AddSongToPlaylist:output_type -> playlist.AddSongToPlaylistResponse
	8,  // 14: playlist.PlaylistService.RemoveSongFromPlaylist:output_type -> playlist.RemoveSongFromPlaylistResponse
	10, // 15: playlist.PlaylistService.MoveSongInPlaylist:output_type -> playlist.MoveSongInPlaylistResponse
	2,  // 16: playlist.PlaylistService.GetPlaylistByID:output_type -> playlist.Playlist
	13, // 17: playlist.PlaylistService.ListMyPlaylists:output_type -> playlist.ListMyPlaylistsResponse
	15, // 18: playlist.PlaylistService.UpdatePlaylist:output_type -> playlist.UpdatePlaylistResponse
	17, // 19: playlist.PlaylistService.DeletePlaylist:output_type -> playlist.DeletePlaylistResponse
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_playlist_proto_init() }
func file_playlist_proto_init() {
	if File_playlist_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_playlist_proto_rawDesc), len(file_playlist_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_playlist_proto_goTypes,
		DependencyIndexes: file_playlist_proto_depIdxs,
		MessageInfos:      file_playlist_proto_msgTypes,
	}.Build()
	File_playlist_proto = out.File
	file_playlist_proto_goTypes = nil
	file_playlist_proto_depIdxs = nil
}
